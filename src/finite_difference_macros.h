#ifndef FINITE_DIFF
#define FINITE_DIFF

/* Here is a header file containing macros for finite difference stencils
   These macros are generated by MATLAB
 */


//Too laxy to implement Laplacian in different orders
#define LAP(u,i,j) ((u[IDXP(i,j+1)] + u[IDXP(i,j-1)] + u[IDXP(i+1,j)] + u[IDXP(i-1,j)] - 4*u[IDX(i,j)])/dx/dx)


/*
Second Order
*/

/*
#define Dxa(u,i,j)    ( 1*(u[IDXP(i+1,j)] - u[IDXP(i-1,j)]))/(2*dx)
#define Dya(u,i,j)    ( 1*(u[IDXP(i,j+1)] - u[IDXP(i,j-1)]))/(2*dx)
#define Dxa_prod(u,v,i,j)    ( 1*( u[IDXP(i+1,j)]*v[IDXP(i+1,j)] - u[IDXP(i-1,j)]*v[IDXP(i-1,j)]))/(2*dx)
#define Dya_prod(u,v,i,j)    ( 1*( u[IDXP(i,j+1)]*v[IDXP(i,j+1)] - u[IDXP(i,j-1)]*v[IDXP(i,j-1)]))/(2*dx)
#define Dxb(u,i,j)    ( 1*(u[IDXP(i+1,j+1)] - u[IDXP(i+0,j+1)] + u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)]))/(2*dx)
#define Dyb(u,i,j)    ( 1*(u[IDXP(i+1,j+1)] + u[IDXP(i+0,j+1)] - u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)]))/(2*dx)
*/








/*
FOURTH ORDER
*/

/*
#define Dxa(u,i,j)    ( 8*(u[IDXP(i+1,j)] - u[IDXP(i-1,j)])-1*(u[IDXP(i+2,j)] - u[IDXP(i-2,j)]))/(12*dx)
#define Dya(u,i,j)    ( 8*(u[IDXP(i,j+1)] - u[IDXP(i,j-1)])-1*(u[IDXP(i,j+2)] - u[IDXP(i,j-2)]))/(12*dx)
#define Dxa_prod(u,v,i,j)    ( 8*( u[IDXP(i+1,j)]*v[IDXP(i+1,j)] - u[IDXP(i-1,j)]*v[IDXP(i-1,j)])-1*( u[IDXP(i+2,j)]*v[IDXP(i+2,j)] - u[IDXP(i-2,j)]*v[IDXP(i-2,j)]))/(12*dx)
#define Dya_prod(u,v,i,j)    ( 8*( u[IDXP(i,j+1)]*v[IDXP(i,j+1)] - u[IDXP(i,j-1)]*v[IDXP(i,j-1)])-1*( u[IDXP(i,j+2)]*v[IDXP(i,j+2)] - u[IDXP(i,j-2)]*v[IDXP(i,j-2)]))/(12*dx)
#define Dxb(u,i,j)    ( 243*(u[IDXP(i+1,j+1)] - u[IDXP(i+0,j+1)] + u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)])-27*(u[IDXP(i+1,j+2)] - u[IDXP(i+0,j+2)] + u[IDXP(i+1,j+-1)] - u[IDXP(i+0,j+-1)])+-9*(u[IDXP(i+2,j+1)] - u[IDXP(i+-1,j+1)] + u[IDXP(i+2,j+0)] - u[IDXP(i+-1,j+0)])+1*(u[IDXP(i+2,j+2)] - u[IDXP(i+-1,j+2)] + u[IDXP(i+2,j+-1)] - u[IDXP(i+-1,j+-1)]))/(384*dx)
#define Dyb(u,i,j)    ( 243*(u[IDXP(i+1,j+1)] + u[IDXP(i+0,j+1)] - u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)])-9*(u[IDXP(i+1,j+2)] + u[IDXP(i+0,j+2)] - u[IDXP(i+1,j+-1)] - u[IDXP(i+0,j+-1)])+-27*(u[IDXP(i+2,j+1)] + u[IDXP(i+-1,j+1)] - u[IDXP(i+2,j+0)] - u[IDXP(i+-1,j+0)])+1*(u[IDXP(i+2,j+2)] + u[IDXP(i+-1,j+2)] - u[IDXP(i+2,j+-1)] - u[IDXP(i+-1,j+-1)]))/(384*dx)
*/




/*
SIXTH ORDER
*/

#define Dxa(u,i,j)    ( 45*(u[IDXP(i+1,j)] - u[IDXP(i-1,j)])-9*(u[IDXP(i+2,j)] - u[IDXP(i-2,j)]) + 1*(u[IDXP(i+3,j)] - u[IDXP(i-3,j)]))/(60*dx)
#define Dya(u,i,j)    ( 45*(u[IDXP(i,j+1)] - u[IDXP(i,j-1)])-9*(u[IDXP(i,j+2)] - u[IDXP(i,j-2)]) + 1*(u[IDXP(i,j+3)] - u[IDXP(i,j-3)]))/(60*dx)
#define Dxa_prod(u,v,i,j)    ( 45*( u[IDXP(i+1,j)]*v[IDXP(i+1,j)] - u[IDXP(i-1,j)]*v[IDXP(i-1,j)])-9*( u[IDXP(i+2,j)]*v[IDXP(i+2,j)] - u[IDXP(i-2,j)]*v[IDXP(i-2,j)]) + 1*( u[IDXP(i+3,j)]*v[IDXP(i+3,j)] - u[IDXP(i-3,j)]*v[IDXP(i-3,j)]))/(60*dx)
#define Dya_prod(u,v,i,j)    ( 45*( u[IDXP(i,j+1)]*v[IDXP(i,j+1)] - u[IDXP(i,j-1)]*v[IDXP(i,j-1)])-9*( u[IDXP(i,j+2)]*v[IDXP(i,j+2)] - u[IDXP(i,j-2)]*v[IDXP(i,j-2)]) + 1*( u[IDXP(i,j+3)]*v[IDXP(i,j+3)] - u[IDXP(i,j-3)]*v[IDXP(i,j-3)]))/(60*dx)
#define Dxb(u,i,j)    ( 337500*(u[IDXP(i+1,j+1)] - u[IDXP(i+0,j+1)] + u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)])-56250*(u[IDXP(i+1,j+2)] - u[IDXP(i+0,j+2)] + u[IDXP(i+1,j+-1)] - u[IDXP(i+0,j+-1)])+6750*(u[IDXP(i+1,j+3)] - u[IDXP(i+0,j+3)] + u[IDXP(i+1,j+-2)] - u[IDXP(i+0,j+-2)])+-18750*(u[IDXP(i+2,j+1)] - u[IDXP(i+-1,j+1)] + u[IDXP(i+2,j+0)] - u[IDXP(i+-1,j+0)])+3125*(u[IDXP(i+2,j+2)] - u[IDXP(i+-1,j+2)] + u[IDXP(i+2,j+-1)] - u[IDXP(i+-1,j+-1)])+-375*(u[IDXP(i+2,j+3)] - u[IDXP(i+-1,j+3)] + u[IDXP(i+2,j+-2)] - u[IDXP(i+-1,j+-2)])+1350*(u[IDXP(i+3,j+1)] - u[IDXP(i+-2,j+1)] + u[IDXP(i+3,j+0)] - u[IDXP(i+-2,j+0)])+-225*(u[IDXP(i+3,j+2)] - u[IDXP(i+-2,j+2)] + u[IDXP(i+3,j+-1)] - u[IDXP(i+-2,j+-1)])+27*(u[IDXP(i+3,j+3)] - u[IDXP(i+-2,j+3)] + u[IDXP(i+3,j+-2)] - u[IDXP(i+-2,j+-2)]))/(491520*dx)
#define Dyb(u,i,j)    ( 337500*(u[IDXP(i+1,j+1)] + u[IDXP(i+0,j+1)] - u[IDXP(i+1,j+0)] - u[IDXP(i+0,j+0)])-18750*(u[IDXP(i+1,j+2)] + u[IDXP(i+0,j+2)] - u[IDXP(i+1,j+-1)] - u[IDXP(i+0,j+-1)])+1350*(u[IDXP(i+1,j+3)] + u[IDXP(i+0,j+3)] - u[IDXP(i+1,j+-2)] - u[IDXP(i+0,j+-2)])+-56250*(u[IDXP(i+2,j+1)] + u[IDXP(i+-1,j+1)] - u[IDXP(i+2,j+0)] - u[IDXP(i+-1,j+0)])+3125*(u[IDXP(i+2,j+2)] + u[IDXP(i+-1,j+2)] - u[IDXP(i+2,j+-1)] - u[IDXP(i+-1,j+-1)])+-225*(u[IDXP(i+2,j+3)] + u[IDXP(i+-1,j+3)] - u[IDXP(i+2,j+-2)] - u[IDXP(i+-1,j+-2)])+6750*(u[IDXP(i+3,j+1)] + u[IDXP(i+-2,j+1)] - u[IDXP(i+3,j+0)] - u[IDXP(i+-2,j+0)])+-375*(u[IDXP(i+3,j+2)] + u[IDXP(i+-2,j+2)] - u[IDXP(i+3,j+-1)] - u[IDXP(i+-2,j+-1)])+27*(u[IDXP(i+3,j+3)] + u[IDXP(i+-2,j+3)] - u[IDXP(i+3,j+-2)] - u[IDXP(i+-2,j+-2)]))/(491520*dx)







#endif
